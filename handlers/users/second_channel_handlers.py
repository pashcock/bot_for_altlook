
from aiogram import types
from aiogram.dispatcher import FSMContext


from data import config
from keyboards.Inline.admin_key import key_sec_chn, key_add_second_channel_back
from loader import bot, dp, db
from state import SecChn


@dp.message_handler(state=SecChn.Cr)
async def get_chat(message: types.Message):
    try:
        k = await bot.get_chat(message.forward_from_chat.id)
        config.additional_channel = message.forward_from_chat.id
        await message.answer(text='–£—Å–ø–µ—à–Ω–æ: –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –∫–∞–Ω–∞–ª–∞'
                                  '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {}\n–¢–∏–ø —á–∞—Ç–∞: {}'
                                  '\n\n\n–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª:\n'
                                  '<code>https://t.me/joinchat/.......</code>'.format(k.title, k.type),
                             reply_markup=key_add_second_channel_back)
        await SecChn.Wr.set()
    except Exception as e:
        await message.answer(f'–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É, –±–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –∫–∞–Ω–∞–ª–∞\n\n{e}',
                             reply_markup=key_add_second_channel_back)


@dp.message_handler(state=SecChn.Wr)
async def get_link_chat(message: types.Message, state: FSMContext):
    answer = message.text
    if answer.__contains__('https://t.me/joinchat/'):
        config.channel_link = answer
        await message.answer('–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω', reply_markup=key_add_second_channel_back)
        await state.finish()
        await db.update_add_channel()
    else:
        await message.answer('–û—à–∏–±–∫–∞ - —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–π —Å—Å—ã–ª–∫–∏(–∫–∞–Ω–∞–ª '
                             '–ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –æ–±—è–∑–∞–Ω –±—ã—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º\n\n'
                             '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É',
                             reply_markup=key_add_second_channel_back)


@dp.callback_query_handler(text='second_channel', user_id=config.admins)
async def second_channel_edit(call: types.CallbackQuery):
    await call.answer()
    text = '''üï∏<b>–í—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª</b>
    
<b>–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª
<b>–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –∫–∞–Ω–∞–ª —É–¥–∞–ª–∏—Ç—å—Å—è –¥–∞–∂–µ –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ –±—ã–ª–æ(–ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –ª–∏—à–Ω–∏–π –∫–æ–¥)
            '''
    await bot.edit_message_text(text=text, chat_id=call.message.chat.id, message_id=call.message.message_id,
                                reply_markup=key_sec_chn)


@dp.callback_query_handler(text='second_channel', user_id=config.admins, state=SecChn.Cr)
async def second_channel_edit(call: types.CallbackQuery, state: FSMContext):
    await call.answer()
    await state.finish()
    text = '''üï∏<b>–í—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª</b>
    
<b>–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª
<b>–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –∫–∞–Ω–∞–ª —É–¥–∞–ª–∏—Ç—å—Å—è –¥–∞–∂–µ –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ –±—ã–ª–æ(–ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –ª–∏—à–Ω–∏–π –∫–æ–¥)
                '''
    await bot.edit_message_text(text=text, chat_id=call.message.chat.id, message_id=call.message.message_id,
                                reply_markup=key_sec_chn)


@dp.callback_query_handler(text='second_channel', user_id=config.admins, state=SecChn.Wr)
async def second_channel_edit(call: types.CallbackQuery, state: FSMContext):
    await call.answer()
    await state.finish()
    text = '''üï∏<b>–í—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª</b>
    
<b>–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–∞–ª–∞ –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª
<b>–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª</b> - –∫–∞–Ω–∞–ª —É–¥–∞–ª–∏—Ç—å—Å—è –¥–∞–∂–µ –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ –±—ã–ª–æ(–ø—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –Ω–µ –ø–∏—Å–∞—Ç—å –ª–∏—à–Ω–∏–π –∫–æ–¥)
                '''
    await bot.edit_message_text(text=text, chat_id=call.message.chat.id, message_id=call.message.message_id,
                                reply_markup=key_sec_chn)


@dp.callback_query_handler(text='add_second_channel', user_id=config.admins)
async def add_second_channel(call: types.CallbackQuery):
    await call.answer()
    await SecChn.Cr.set()
    text = '–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å\n\n–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–º –∞–¥–º–∏–Ω–æ–º\n\n' \
           '–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –±–æ—Ç —Å–æ–æ–±—â–∏—Ç –æ–± —ç—Ç–æ–º'
    await bot.edit_message_text(text=text, chat_id=call.message.chat.id, message_id=call.message.message_id,
                                reply_markup=key_add_second_channel_back)


@dp.callback_query_handler(text='del_second_channel', user_id=config.admins)
async def second_channel_del(call: types.CallbackQuery):
    config.additional_channel = ''
    await db.del_add_channel()
    await call.answer('–í—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω', show_alert=True)
